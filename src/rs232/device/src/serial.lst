gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.8.5 #5516 (Sep 20 2009) (UNIX)
               00004 ; This file was generated Sat Nov 21 16:31:00 2009
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f4550
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _serial_setup
               00016         global _serial_sleep
               00017         global _serial_read
               00018         global _serial_pop_fifo
               00019         global _serial_write
               00020         global _serial_writei
               00021         global _serial_writeb
               00022         global _serial_handle_interrupt
               00023 
               00024 ;--------------------------------------------------------
               00025 ; extern variables in this module
               00026 ;--------------------------------------------------------
               00027         extern __gptrget1
               00028         extern __gptrput1
               00029         extern _SPPDATAbits
               00030         extern _SPPCFGbits
               00031         extern _SPPEPSbits
               00032         extern _SPPCONbits
               00033         extern _UFRMLbits
               00034         extern _UFRMHbits
               00035         extern _UIRbits
               00036         extern _UIEbits
               00037         extern _UEIRbits
               00038         extern _UEIEbits
               00039         extern _USTATbits
               00040         extern _UCONbits
               00041         extern _UADDRbits
               00042         extern _UCFGbits
               00043         extern _UEP0bits
               00044         extern _UEP1bits
               00045         extern _UEP2bits
               00046         extern _UEP3bits
               00047         extern _UEP4bits
               00048         extern _UEP5bits
               00049         extern _UEP6bits
               00050         extern _UEP7bits
               00051         extern _UEP8bits
               00052         extern _UEP9bits
               00053         extern _UEP10bits
               00054         extern _UEP11bits
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         extern _UEP12bits
               00056         extern _UEP13bits
               00057         extern _UEP14bits
               00058         extern _UEP15bits
               00059         extern _PORTAbits
               00060         extern _PORTBbits
               00061         extern _PORTCbits
               00062         extern _PORTDbits
               00063         extern _PORTEbits
               00064         extern _LATAbits
               00065         extern _LATBbits
               00066         extern _LATCbits
               00067         extern _LATDbits
               00068         extern _LATEbits
               00069         extern _TRISAbits
               00070         extern _TRISBbits
               00071         extern _TRISCbits
               00072         extern _TRISDbits
               00073         extern _TRISEbits
               00074         extern _OSCTUNEbits
               00075         extern _PIE1bits
               00076         extern _PIR1bits
               00077         extern _IPR1bits
               00078         extern _PIE2bits
               00079         extern _PIR2bits
               00080         extern _IPR2bits
               00081         extern _EECON1bits
               00082         extern _RCSTAbits
               00083         extern _TXSTAbits
               00084         extern _T3CONbits
               00085         extern _CMCONbits
               00086         extern _CVRCONbits
               00087         extern _ECCP1ASbits
               00088         extern _ECCP1DELbits
               00089         extern _BAUDCONbits
               00090         extern _CCP2CONbits
               00091         extern _CCP1CONbits
               00092         extern _ADCON2bits
               00093         extern _ADCON1bits
               00094         extern _ADCON0bits
               00095         extern _SSPCON2bits
               00096         extern _SSPCON1bits
               00097         extern _SSPSTATbits
               00098         extern _T2CONbits
               00099         extern _T1CONbits
               00100         extern _RCONbits
               00101         extern _WDTCONbits
               00102         extern _HLVDCONbits
               00103         extern _OSCCONbits
               00104         extern _T0CONbits
               00105         extern _STATUSbits
               00106         extern _FSR2Hbits
               00107         extern _BSRbits
               00108         extern _FSR1Hbits
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _FSR0Hbits
               00110         extern _INTCON3bits
               00111         extern _INTCON2bits
               00112         extern _INTCONbits
               00113         extern _TBLPTRUbits
               00114         extern _PCLATHbits
               00115         extern _PCLATUbits
               00116         extern _STKPTRbits
               00117         extern _TOSUbits
               00118         extern _SPPDATA
               00119         extern _SPPCFG
               00120         extern _SPPEPS
               00121         extern _SPPCON
               00122         extern _UFRML
               00123         extern _UFRMH
               00124         extern _UIR
               00125         extern _UIE
               00126         extern _UEIR
               00127         extern _UEIE
               00128         extern _USTAT
               00129         extern _UCON
               00130         extern _UADDR
               00131         extern _UCFG
               00132         extern _UEP0
               00133         extern _UEP1
               00134         extern _UEP2
               00135         extern _UEP3
               00136         extern _UEP4
               00137         extern _UEP5
               00138         extern _UEP6
               00139         extern _UEP7
               00140         extern _UEP8
               00141         extern _UEP9
               00142         extern _UEP10
               00143         extern _UEP11
               00144         extern _UEP12
               00145         extern _UEP13
               00146         extern _UEP14
               00147         extern _UEP15
               00148         extern _PORTA
               00149         extern _PORTB
               00150         extern _PORTC
               00151         extern _PORTD
               00152         extern _PORTE
               00153         extern _LATA
               00154         extern _LATB
               00155         extern _LATC
               00156         extern _LATD
               00157         extern _LATE
               00158         extern _TRISA
               00159         extern _TRISB
               00160         extern _TRISC
               00161         extern _TRISD
               00162         extern _TRISE
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _OSCTUNE
               00164         extern _PIE1
               00165         extern _PIR1
               00166         extern _IPR1
               00167         extern _PIE2
               00168         extern _PIR2
               00169         extern _IPR2
               00170         extern _EECON1
               00171         extern _EECON2
               00172         extern _EEDATA
               00173         extern _EEADR
               00174         extern _RCSTA
               00175         extern _TXSTA
               00176         extern _TXREG
               00177         extern _RCREG
               00178         extern _SPBRG
               00179         extern _SPBRGH
               00180         extern _T3CON
               00181         extern _TMR3L
               00182         extern _TMR3H
               00183         extern _CMCON
               00184         extern _CVRCON
               00185         extern _ECCP1AS
               00186         extern _ECCP1DEL
               00187         extern _BAUDCON
               00188         extern _CCP2CON
               00189         extern _CCPR2L
               00190         extern _CCPR2H
               00191         extern _CCP1CON
               00192         extern _CCPR1L
               00193         extern _CCPR1H
               00194         extern _ADCON2
               00195         extern _ADCON1
               00196         extern _ADCON0
               00197         extern _ADRESL
               00198         extern _ADRESH
               00199         extern _SSPCON2
               00200         extern _SSPCON1
               00201         extern _SSPSTAT
               00202         extern _SSPADD
               00203         extern _SSPBUF
               00204         extern _T2CON
               00205         extern _PR2
               00206         extern _TMR2
               00207         extern _T1CON
               00208         extern _TMR1L
               00209         extern _TMR1H
               00210         extern _RCON
               00211         extern _WDTCON
               00212         extern _HLVDCON
               00213         extern _OSCCON
               00214         extern _T0CON
               00215         extern _TMR0L
               00216         extern _TMR0H
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _STATUS
               00218         extern _FSR2L
               00219         extern _FSR2H
               00220         extern _PLUSW2
               00221         extern _PREINC2
               00222         extern _POSTDEC2
               00223         extern _POSTINC2
               00224         extern _INDF2
               00225         extern _BSR
               00226         extern _FSR1L
               00227         extern _FSR1H
               00228         extern _PLUSW1
               00229         extern _PREINC1
               00230         extern _POSTDEC1
               00231         extern _POSTINC1
               00232         extern _INDF1
               00233         extern _WREG
               00234         extern _FSR0L
               00235         extern _FSR0H
               00236         extern _PLUSW0
               00237         extern _PREINC0
               00238         extern _POSTDEC0
               00239         extern _POSTINC0
               00240         extern _INDF0
               00241         extern _INTCON3
               00242         extern _INTCON2
               00243         extern _INTCON
               00244         extern _PRODL
               00245         extern _PRODH
               00246         extern _TABLAT
               00247         extern _TBLPTRL
               00248         extern _TBLPTRH
               00249         extern _TBLPTRU
               00250         extern _PCL
               00251         extern _PCLATH
               00252         extern _PCLATU
               00253         extern _STKPTR
               00254         extern _TOSL
               00255         extern _TOSH
               00256         extern _TOSU
               00257         extern _osc_set_power
               00258 ;--------------------------------------------------------
               00259 ;       Equates to used internal registers
               00260 ;--------------------------------------------------------
  00000FD8     00261 STATUS  equ     0xfd8
  00000FE8     00262 WREG    equ     0xfe8
  00000FE9     00263 FSR0L   equ     0xfe9
  00000FE1     00264 FSR1L   equ     0xfe1
  00000FD9     00265 FSR2L   equ     0xfd9
  00000FE5     00266 POSTDEC1        equ     0xfe5
  00000FE4     00267 PREINC1 equ     0xfe4
  00000FDB     00268 PLUSW2  equ     0xfdb
  00000FF3     00269 PRODL   equ     0xff3
  00000FF4     00270 PRODH   equ     0xff4
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271 
               00272 
               00273 ; Internal registers
               00274 .registers      udata_ovr       0x0000
               00275 r0x00   res     1
               00276 r0x01   res     1
               00277 r0x02   res     1
               00278 r0x03   res     1
               00279 r0x04   res     1
               00280 r0x05   res     1
               00281 r0x06   res     1
               00282 r0x07   res     1
               00283 r0x08   res     1
               00284 r0x09   res     1
               00285 
               00286 udata_serial_0  udata
               00287 _gfifo  res     9
               00288 
               00289 ;--------------------------------------------------------
               00290 ; global & static initialisations
               00291 ;--------------------------------------------------------
               00292 ; I code from now on!
               00293 ; ; Starting pCode block
               00294 S_serial__serial_handle_interrupt       code
0000      00295 _serial_handle_interrupt:
               00296 ;       .line   253; ../src/serial.c    void serial_handle_interrupt(void)
0000 CFD9 FFE5 00297         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00298         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00299         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00300         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00301         MOVFF   r0x02, POSTDEC1
               00302 ;       .line   255; ../src/serial.c    if (!PIR1bits.RCIF)
0014 BA00      00303         BTFSC   _PIR1bits, 5
0016 D000      00304         BRA     _00214_DS_
               00305 ;       .line   256; ../src/serial.c    return ;
0018 D000      00306         BRA     _00224_DS_
001A      00307 _00214_DS_:
               00308 ;       .line   258; ../src/serial.c    if (RCSTAbits.OERR)
001A A200      00309         BTFSS   _RCSTAbits, 1
001C D000      00310         BRA     _00222_DS_
               00311         ;       VOLATILE READ - BEGIN
001E 5000      00312         MOVF    _RCREG, W
               00313         ;       VOLATILE READ - END
0020 0000      00314         BANKSEL _gfifo
               00315 ;       .line   264; ../src/serial.c    gfifo.error = 1;
0022 8D00      00316         BSF     _gfifo, 6, B
0024 D000      00317         BRA     _00223_DS_
0026      00318 _00222_DS_:
               00319 ;       .line   266; ../src/serial.c    else if (RCSTAbits.FERR)
0026 A400      00320         BTFSS   _RCSTAbits, 2
0028 D000      00321         BRA     _00219_DS_
               00322 ;       .line   268; ../src/serial.c    RCSTAbits.CREN = 0;
002A 9800      00323         BCF     _RCSTAbits, 4
               00324 ;       .line   269; ../src/serial.c    RCSTAbits.CREN = 1;
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
002C 8800      00325         BSF     _RCSTAbits, 4
002E 0000      00326         BANKSEL _gfifo
               00327 ;       .line   271; ../src/serial.c    gfifo.error = 1;
0030 8D00      00328         BSF     _gfifo, 6, B
0032 D000      00329         BRA     _00223_DS_
0034      00330 _00219_DS_:
0034 0000      00331         BANKSEL _gfifo
               00332 ;       .line   275; ../src/serial.c    if (gfifo.size < sizeof(gfifo.buffer))
0036 5100      00333         MOVF    _gfifo, W, B
0038 0B0F      00334         ANDLW   0x0f
003A 6E00      00335         MOVWF   r0x00
003C 5000      00336         MOVF    r0x00, W
003E 0F80      00337         ADDLW   0x80
0040 0F78      00338         ADDLW   0x78
0042 E200      00339         BC      _00216_DS_
               00340 ;       .line   276; ../src/serial.c    fifo_push(&gfifo, RCREG);
0044 0E00      00341         MOVLW   HIGH(_gfifo)
0046 6E00      00342         MOVWF   r0x01
0048 0E00      00343         MOVLW   LOW(_gfifo)
004A 6E00      00344         MOVWF   r0x00
004C 0E80      00345         MOVLW   0x80
004E 6E00      00346         MOVWF   r0x02
0050 5000      00347         MOVF    _RCREG, W
0052 6EE5      00348         MOVWF   POSTDEC1
0054 5000      00349         MOVF    r0x02, W
0056 6EE5      00350         MOVWF   POSTDEC1
0058 5000      00351         MOVF    r0x01, W
005A 6EE5      00352         MOVWF   POSTDEC1
005C 5000      00353         MOVF    r0x00, W
005E 6EE5      00354         MOVWF   POSTDEC1
0060 EC00 F000 00355         CALL    _fifo_push
0064 0E04      00356         MOVLW   0x04
0066 26E1      00357         ADDWF   FSR1L, F
0068 D000      00358         BRA     _00223_DS_
006A      00359 _00216_DS_:
006A 0000      00360         BANKSEL _gfifo
               00361 ;       .line   278; ../src/serial.c    gfifo.overflow = 1;
006C 8F00      00362         BSF     _gfifo, 7, B
006E      00363 _00223_DS_:
               00364 ;       .line   281; ../src/serial.c    PIR1bits.RCIF = 0;
006E 9A00      00365         BCF     _PIR1bits, 5
0070      00366 _00224_DS_:
0070 CFE4 F000 00367         MOVFF   PREINC1, r0x02
0074 CFE4 F000 00368         MOVFF   PREINC1, r0x01
0078 CFE4 F000 00369         MOVFF   PREINC1, r0x00
007C CFE4 FFD9 00370         MOVFF   PREINC1, FSR2L
0080 0012      00371         RETURN  
               00372 
               00373 ; ; Starting pCode block
               00374 S_serial__serial_writeb code
0000      00375 _serial_writeb:
               00376 ;       .line   247; ../src/serial.c    void serial_writeb(unsigned char b)
0000 CFD9 FFE5 00377         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00378         MOVFF   FSR1L, FSR2L
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0008 C000 FFE5 00379         MOVFF   r0x00, POSTDEC1
000C 0E02      00380         MOVLW   0x02
000E CFDB F000 00381         MOVFF   PLUSW2, r0x00
               00382 ;       .line   249; ../src/serial.c    write_byte(b);
0012 5000      00383         MOVF    r0x00, W
0014 6EE5      00384         MOVWF   POSTDEC1
0016 EC00 F000 00385         CALL    _write_byte
001A 2AE1      00386         INCF    FSR1L, F
001C CFE4 F000 00387         MOVFF   PREINC1, r0x00
0020 CFE4 FFD9 00388         MOVFF   PREINC1, FSR2L
0024 0012      00389         RETURN  
               00390 
               00391 ; ; Starting pCode block
               00392 S_serial__serial_writei code
0000      00393 _serial_writei:
               00394 ;       .line   239; ../src/serial.c    void serial_writei(unsigned int i)
0000 CFD9 FFE5 00395         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00396         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00397         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00398         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00399         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00400         MOVFF   r0x03, POSTDEC1
0018 0E02      00401         MOVLW   0x02
001A CFDB F000 00402         MOVFF   PLUSW2, r0x00
001E 0E03      00403         MOVLW   0x03
0020 CFDB F000 00404         MOVFF   PLUSW2, r0x01
               00405 ;       .line   242; ../src/serial.c    write_byte(MASK_BYTE(i, 0));
0024 C000 F000 00406         MOVFF   r0x01, r0x03
0028 C000 F000 00407         MOVFF   r0x00, r0x02
002C 6A00      00408         CLRF    r0x03
002E 5000      00409         MOVF    r0x02, W
0030 6EE5      00410         MOVWF   POSTDEC1
0032 EC00 F000 00411         CALL    _write_byte
0036 2AE1      00412         INCF    FSR1L, F
               00413 ;       .line   243; ../src/serial.c    write_byte(MASK_BYTE(i, 1));
0038 5000      00414         MOVF    r0x01, W
003A 6E00      00415         MOVWF   r0x00
003C 6A00      00416         CLRF    r0x01
003E 6A00      00417         CLRF    r0x01
0040 5000      00418         MOVF    r0x00, W
0042 6EE5      00419         MOVWF   POSTDEC1
0044 EC00 F000 00420         CALL    _write_byte
0048 2AE1      00421         INCF    FSR1L, F
004A CFE4 F000 00422         MOVFF   PREINC1, r0x03
004E CFE4 F000 00423         MOVFF   PREINC1, r0x02
0052 CFE4 F000 00424         MOVFF   PREINC1, r0x01
0056 CFE4 F000 00425         MOVFF   PREINC1, r0x00
005A CFE4 FFD9 00426         MOVFF   PREINC1, FSR2L
005E 0012      00427         RETURN  
               00428 
               00429 ; ; Starting pCode block
               00430 S_serial__serial_write  code
0000      00431 _serial_write:
               00432 ;       .line   230; ../src/serial.c    void serial_write(unsigned char* s, unsigned int len)
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 CFD9 FFE5 00433         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00434         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00435         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00436         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00437         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00438         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00439         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00440         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00441         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00442         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00443         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00444         MOVFF   r0x09, POSTDEC1
0030 0E02      00445         MOVLW   0x02
0032 CFDB F000 00446         MOVFF   PLUSW2, r0x00
0036 0E03      00447         MOVLW   0x03
0038 CFDB F000 00448         MOVFF   PLUSW2, r0x01
003C 0E04      00449         MOVLW   0x04
003E CFDB F000 00450         MOVFF   PLUSW2, r0x02
0042 0E05      00451         MOVLW   0x05
0044 CFDB F000 00452         MOVFF   PLUSW2, r0x03
0048 0E06      00453         MOVLW   0x06
004A CFDB F000 00454         MOVFF   PLUSW2, r0x04
               00455 ;       .line   234; ../src/serial.c    for (i = 0; i < len; ++i)
004E 6A00      00456         CLRF    r0x05
0050 6A00      00457         CLRF    r0x06
0052      00458 _00189_DS_:
0052 5000      00459         MOVF    r0x04, W
0054 5C00      00460         SUBWF   r0x06, W
0056 E100      00461         BNZ     _00198_DS_
0058 5000      00462         MOVF    r0x03, W
005A 5C00      00463         SUBWF   r0x05, W
005C      00464 _00198_DS_:
005C E200      00465         BC      _00193_DS_
               00466 ;       .line   235; ../src/serial.c    write_byte(s[i]);
005E 5000      00467         MOVF    r0x05, W
0060 2400      00468         ADDWF   r0x00, W
0062 6E00      00469         MOVWF   r0x07
0064 5000      00470         MOVF    r0x06, W
0066 2000      00471         ADDWFC  r0x01, W
0068 6E00      00472         MOVWF   r0x08
006A 6AE8      00473         CLRF    WREG
006C 2000      00474         ADDWFC  r0x02, W
006E 6E00      00475         MOVWF   r0x09
0070 C000 FFE9 00476         MOVFF   r0x07, FSR0L
0074 C000 FFF3 00477         MOVFF   r0x08, PRODL
0078 5000      00478         MOVF    r0x09, W
007A EC00 F000 00479         CALL    __gptrget1
007E 6E00      00480         MOVWF   r0x07
0080 5000      00481         MOVF    r0x07, W
0082 6EE5      00482         MOVWF   POSTDEC1
0084 EC00 F000 00483         CALL    _write_byte
0088 2AE1      00484         INCF    FSR1L, F
               00485 ;       .line   234; ../src/serial.c    for (i = 0; i < len; ++i)
008A 2A00      00486         INCF    r0x05, F
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008C B0D8      00487         BTFSC   STATUS, 0
008E 2A00      00488         INCF    r0x06, F
0090 D000      00489         BRA     _00189_DS_
0092      00490 _00193_DS_:
0092 CFE4 F000 00491         MOVFF   PREINC1, r0x09
0096 CFE4 F000 00492         MOVFF   PREINC1, r0x08
009A CFE4 F000 00493         MOVFF   PREINC1, r0x07
009E CFE4 F000 00494         MOVFF   PREINC1, r0x06
00A2 CFE4 F000 00495         MOVFF   PREINC1, r0x05
00A6 CFE4 F000 00496         MOVFF   PREINC1, r0x04
00AA CFE4 F000 00497         MOVFF   PREINC1, r0x03
00AE CFE4 F000 00498         MOVFF   PREINC1, r0x02
00B2 CFE4 F000 00499         MOVFF   PREINC1, r0x01
00B6 CFE4 F000 00500         MOVFF   PREINC1, r0x00
00BA CFE4 FFD9 00501         MOVFF   PREINC1, FSR2L
00BE 0012      00502         RETURN  
               00503 
               00504 ; ; Starting pCode block
               00505 S_serial__serial_pop_fifo       code
0000      00506 _serial_pop_fifo:
               00507 ;       .line   212; ../src/serial.c    int serial_pop_fifo(unsigned char* c)
0000 CFD9 FFE5 00508         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00509         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00510         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00511         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00512         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00513         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00514         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00515         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00516         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00517         MOVFF   r0x07, POSTDEC1
0028 0E02      00518         MOVLW   0x02
002A CFDB F000 00519         MOVFF   PLUSW2, r0x00
002E 0E03      00520         MOVLW   0x03
0030 CFDB F000 00521         MOVFF   PLUSW2, r0x01
0034 0E04      00522         MOVLW   0x04
0036 CFDB F000 00523         MOVFF   PLUSW2, r0x02
               00524 ;       .line   214; ../src/serial.c    int res = -1;
003A 0EFF      00525         MOVLW   0xff
003C 6E00      00526         MOVWF   r0x03
003E 6E00      00527         MOVWF   r0x04
               00528 ;       .line   216; ../src/serial.c    fifo_lock(&gfifo);
0040 0E00      00529         MOVLW   HIGH(_gfifo)
0042 6E00      00530         MOVWF   r0x06
0044 0E00      00531         MOVLW   LOW(_gfifo)
0046 6E00      00532         MOVWF   r0x05
0048 0E80      00533         MOVLW   0x80
004A 6E00      00534         MOVWF   r0x07
004C 5000      00535         MOVF    r0x07, W
004E 6EE5      00536         MOVWF   POSTDEC1
0050 5000      00537         MOVF    r0x06, W
0052 6EE5      00538         MOVWF   POSTDEC1
0054 5000      00539         MOVF    r0x05, W
0056 6EE5      00540         MOVWF   POSTDEC1
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0058 EC00 F000 00541         CALL    _fifo_lock
005C 0E03      00542         MOVLW   0x03
005E 26E1      00543         ADDWF   FSR1L, F
0060 0000      00544         BANKSEL _gfifo
               00545 ;       .line   218; ../src/serial.c    if (gfifo.size)
0062 5100      00546         MOVF    _gfifo, W, B
0064 0B0F      00547         ANDLW   0x0f
0066 6E00      00548         MOVWF   r0x05
0068 5000      00549         MOVF    r0x05, W
006A E000      00550         BZ      _00183_DS_
               00551 ;       .line   220; ../src/serial.c    *c = fifo_pop(&gfifo);
006C 0E00      00552         MOVLW   HIGH(_gfifo)
006E 6E00      00553         MOVWF   r0x06
0070 0E00      00554         MOVLW   LOW(_gfifo)
0072 6E00      00555         MOVWF   r0x05
0074 0E80      00556         MOVLW   0x80
0076 6E00      00557         MOVWF   r0x07
0078 5000      00558         MOVF    r0x07, W
007A 6EE5      00559         MOVWF   POSTDEC1
007C 5000      00560         MOVF    r0x06, W
007E 6EE5      00561         MOVWF   POSTDEC1
0080 5000      00562         MOVF    r0x05, W
0082 6EE5      00563         MOVWF   POSTDEC1
0084 EC00 F000 00564         CALL    _fifo_pop
0088 6E00      00565         MOVWF   r0x05
008A 0E03      00566         MOVLW   0x03
008C 26E1      00567         ADDWF   FSR1L, F
008E C000 FFE5 00568         MOVFF   r0x05, POSTDEC1
0092 C000 FFE9 00569         MOVFF   r0x00, FSR0L
0096 C000 FFF3 00570         MOVFF   r0x01, PRODL
009A 5000      00571         MOVF    r0x02, W
009C EC00 F000 00572         CALL    __gptrput1
               00573 ;       .line   221; ../src/serial.c    res = 0;
00A0 6A00      00574         CLRF    r0x03
00A2 6A00      00575         CLRF    r0x04
00A4      00576 _00183_DS_:
               00577 ;       .line   224; ../src/serial.c    fifo_unlock(&gfifo);
00A4 0E00      00578         MOVLW   HIGH(_gfifo)
00A6 6E00      00579         MOVWF   r0x01
00A8 0E00      00580         MOVLW   LOW(_gfifo)
00AA 6E00      00581         MOVWF   r0x00
00AC 0E80      00582         MOVLW   0x80
00AE 6E00      00583         MOVWF   r0x02
00B0 5000      00584         MOVF    r0x02, W
00B2 6EE5      00585         MOVWF   POSTDEC1
00B4 5000      00586         MOVF    r0x01, W
00B6 6EE5      00587         MOVWF   POSTDEC1
00B8 5000      00588         MOVF    r0x00, W
00BA 6EE5      00589         MOVWF   POSTDEC1
00BC EC00 F000 00590         CALL    _fifo_unlock
00C0 0E03      00591         MOVLW   0x03
00C2 26E1      00592         ADDWF   FSR1L, F
               00593 ;       .line   226; ../src/serial.c    return res;
00C4 C000 FFF3 00594         MOVFF   r0x04, PRODL
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C8 5000      00595         MOVF    r0x03, W
00CA CFE4 F000 00596         MOVFF   PREINC1, r0x07
00CE CFE4 F000 00597         MOVFF   PREINC1, r0x06
00D2 CFE4 F000 00598         MOVFF   PREINC1, r0x05
00D6 CFE4 F000 00599         MOVFF   PREINC1, r0x04
00DA CFE4 F000 00600         MOVFF   PREINC1, r0x03
00DE CFE4 F000 00601         MOVFF   PREINC1, r0x02
00E2 CFE4 F000 00602         MOVFF   PREINC1, r0x01
00E6 CFE4 F000 00603         MOVFF   PREINC1, r0x00
00EA CFE4 FFD9 00604         MOVFF   PREINC1, FSR2L
00EE 0012      00605         RETURN  
               00606 
               00607 ; ; Starting pCode block
               00608 S_serial__serial_read   code
0000      00609 _serial_read:
               00610 ;       .line   204; ../src/serial.c    void serial_read(unsigned char* s, unsigned char len)
0000 CFD9 FFE5 00611         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00612         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00613         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00614         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00615         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00616         MOVFF   r0x03, POSTDEC1
0018 0E02      00617         MOVLW   0x02
001A CFDB F000 00618         MOVFF   PLUSW2, r0x00
001E 0E03      00619         MOVLW   0x03
0020 CFDB F000 00620         MOVFF   PLUSW2, r0x01
0024 0E04      00621         MOVLW   0x04
0026 CFDB F000 00622         MOVFF   PLUSW2, r0x02
               00623 ;       .line   208; ../src/serial.c    *s = peek_byte();
002A EC00 F000 00624         CALL    _peek_byte
002E 6E00      00625         MOVWF   r0x03
0030 C000 FFE5 00626         MOVFF   r0x03, POSTDEC1
0034 C000 FFE9 00627         MOVFF   r0x00, FSR0L
0038 C000 FFF3 00628         MOVFF   r0x01, PRODL
003C 5000      00629         MOVF    r0x02, W
003E EC00 F000 00630         CALL    __gptrput1
0042 CFE4 F000 00631         MOVFF   PREINC1, r0x03
0046 CFE4 F000 00632         MOVFF   PREINC1, r0x02
004A CFE4 F000 00633         MOVFF   PREINC1, r0x01
004E CFE4 F000 00634         MOVFF   PREINC1, r0x00
0052 CFE4 FFD9 00635         MOVFF   PREINC1, FSR2L
0056 0012      00636         RETURN  
               00637 
               00638 ; ; Starting pCode block
               00639 S_serial__serial_sleep  code
0000      00640 _serial_sleep:
               00641 ;       .line   191; ../src/serial.c    void serial_sleep(void)
0000 CFD9 FFE5 00642         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00643         MOVFF   FSR1L, FSR2L
               00644 ;       .line   195; ../src/serial.c    osc_set_power(OSC_PMODE_PRI_IDLE);
0008 0E04      00645         MOVLW   0x04
000A 6EE5      00646         MOVWF   POSTDEC1
000C EC00 F000 00647         CALL    _osc_set_power
0010 2AE1      00648         INCF    FSR1L, F
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0012      00649 _00170_DS_:
0012 0003      00650         sleep 
0014 D000      00651         BRA     _00170_DS_
0016 CFE4 FFD9 00652         MOVFF   PREINC1, FSR2L
001A 0012      00653         RETURN  
               00654 
               00655 ; ; Starting pCode block
               00656 S_serial__serial_setup  code
0000      00657 _serial_setup:
               00658 ;       .line   156; ../src/serial.c    void serial_setup(void)
0000 CFD9 FFE5 00659         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00660         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00661         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00662         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00663         MOVFF   r0x02, POSTDEC1
               00664 ;       .line   158; ../src/serial.c    fifo_init(&gfifo);
0014 0E00      00665         MOVLW   HIGH(_gfifo)
0016 6E00      00666         MOVWF   r0x01
0018 0E00      00667         MOVLW   LOW(_gfifo)
001A 6E00      00668         MOVWF   r0x00
001C 0E80      00669         MOVLW   0x80
001E 6E00      00670         MOVWF   r0x02
0020 5000      00671         MOVF    r0x02, W
0022 6EE5      00672         MOVWF   POSTDEC1
0024 5000      00673         MOVF    r0x01, W
0026 6EE5      00674         MOVWF   POSTDEC1
0028 5000      00675         MOVF    r0x00, W
002A 6EE5      00676         MOVWF   POSTDEC1
002C EC00 F000 00677         CALL    _fifo_init
0030 0E03      00678         MOVLW   0x03
0032 26E1      00679         ADDWF   FSR1L, F
               00680 ;       .line   160; ../src/serial.c    SERIAL_TX_TRIS = 0;
0034 9C00      00681         BCF     _TRISCbits, 6
               00682 ;       .line   161; ../src/serial.c    SERIAL_RX_TRIS = 1;
0036 8E00      00683         BSF     _TRISCbits, 7
               00684 ;       .line   166; ../src/serial.c    TXSTA = 0;
0038 6A00      00685         CLRF    _TXSTA
               00686 ;       .line   167; ../src/serial.c    TXSTAbits.TXEN = 1;
003A 8A00      00687         BSF     _TXSTAbits, 5
               00688 ;       .line   169; ../src/serial.c    RCSTA = 0;
003C 6A00      00689         CLRF    _RCSTA
               00690 ;       .line   170; ../src/serial.c    RCSTAbits.SPEN = 1;
003E 8E00      00691         BSF     _RCSTAbits, 7
               00692 ;       .line   171; ../src/serial.c    RCSTAbits.CREN = 1;
0040 8800      00693         BSF     _RCSTAbits, 4
               00694 ;       .line   176; ../src/serial.c    PIR1bits.RCIF = 0;
0042 9A00      00695         BCF     _PIR1bits, 5
               00696 ;       .line   177; ../src/serial.c    PIR1bits.TXIF = 0;
0044 9800      00697         BCF     _PIR1bits, 4
               00698 ;       .line   178; ../src/serial.c    PIE1bits.RCIE = 1;
0046 8A00      00699         BSF     _PIE1bits, 5
               00700 ;       .line   179; ../src/serial.c    PIE1bits.TXIE = 0;
0048 9800      00701         BCF     _PIE1bits, 4
               00702 ;       .line   184; ../src/serial.c    SPBRG = 12;
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004A 0E0C      00703         MOVLW   0x0c
004C 6E00      00704         MOVWF   _SPBRG
               00705 ;       .line   185; ../src/serial.c    TXSTA = 0x20;
004E 0E20      00706         MOVLW   0x20
0050 6E00      00707         MOVWF   _TXSTA
               00708 ;       .line   187; ../src/serial.c    BAUDCON = 0x00;
0052 6A00      00709         CLRF    _BAUDCON
0054 CFE4 F000 00710         MOVFF   PREINC1, r0x02
0058 CFE4 F000 00711         MOVFF   PREINC1, r0x01
005C CFE4 F000 00712         MOVFF   PREINC1, r0x00
0060 CFE4 FFD9 00713         MOVFF   PREINC1, FSR2L
0064 0012      00714         RETURN  
               00715 
               00716 ; ; Starting pCode block
               00717 S_serial__read_byte     code
0000      00718 _read_byte:
               00719 ;       .line   126; ../src/serial.c    static unsigned char read_byte(void)
0000 CFD9 FFE5 00720         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00721         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00722         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00723         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00724         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00725         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00726         MOVFF   r0x04, POSTDEC1
               00727 ;       .line   128; ../src/serial.c    unsigned char has_read = 0;
001C 6A00      00728         CLRF    r0x00
               00729 ;       .line   129; ../src/serial.c    unsigned char c = 0;
001E 6A00      00730         CLRF    r0x01
0020      00731 _00156_DS_:
               00732 ;       .line   131; ../src/serial.c    while (!has_read)
0020 5000      00733         MOVF    r0x00, W
0022 A4D8      00734         BTFSS   STATUS, 2
0024 D000      00735         BRA     _00158_DS_
               00736 ;       .line   133; ../src/serial.c    int_wait();
0026 EC00 F000 00737         CALL    _int_wait
               00738 ;       .line   135; ../src/serial.c    fifo_lock(&gfifo);
002A 0E00      00739         MOVLW   HIGH(_gfifo)
002C 6E00      00740         MOVWF   r0x03
002E 0E00      00741         MOVLW   LOW(_gfifo)
0030 6E00      00742         MOVWF   r0x02
0032 0E80      00743         MOVLW   0x80
0034 6E00      00744         MOVWF   r0x04
0036 5000      00745         MOVF    r0x04, W
0038 6EE5      00746         MOVWF   POSTDEC1
003A 5000      00747         MOVF    r0x03, W
003C 6EE5      00748         MOVWF   POSTDEC1
003E 5000      00749         MOVF    r0x02, W
0040 6EE5      00750         MOVWF   POSTDEC1
0042 EC00 F000 00751         CALL    _fifo_lock
0046 0E03      00752         MOVLW   0x03
0048 26E1      00753         ADDWF   FSR1L, F
004A 0000      00754         BANKSEL _gfifo
               00755 ;       .line   137; ../src/serial.c    if (gfifo.size)
004C 5100      00756         MOVF    _gfifo, W, B
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004E 0B0F      00757         ANDLW   0x0f
0050 6E00      00758         MOVWF   r0x02
0052 5000      00759         MOVF    r0x02, W
0054 E000      00760         BZ      _00154_DS_
               00761 ;       .line   139; ../src/serial.c    c = fifo_pop(&gfifo);
0056 0E00      00762         MOVLW   HIGH(_gfifo)
0058 6E00      00763         MOVWF   r0x03
005A 0E00      00764         MOVLW   LOW(_gfifo)
005C 6E00      00765         MOVWF   r0x02
005E 0E80      00766         MOVLW   0x80
0060 6E00      00767         MOVWF   r0x04
0062 5000      00768         MOVF    r0x04, W
0064 6EE5      00769         MOVWF   POSTDEC1
0066 5000      00770         MOVF    r0x03, W
0068 6EE5      00771         MOVWF   POSTDEC1
006A 5000      00772         MOVF    r0x02, W
006C 6EE5      00773         MOVWF   POSTDEC1
006E EC00 F000 00774         CALL    _fifo_pop
0072 6E00      00775         MOVWF   r0x01
0074 0E03      00776         MOVLW   0x03
0076 26E1      00777         ADDWF   FSR1L, F
               00778 ;       .line   140; ../src/serial.c    has_read = 1;
0078 0E01      00779         MOVLW   0x01
007A 6E00      00780         MOVWF   r0x00
007C D000      00781         BRA     _00155_DS_
007E      00782 _00154_DS_:
007E 0000      00783         BANKSEL _gfifo
               00784 ;       .line   142; ../src/serial.c    else if (gfifo.error)
0080 AD00      00785         BTFSS   _gfifo, 6, B
0082 D000      00786         BRA     _00155_DS_
               00787 ;       .line   144; ../src/serial.c    has_read = 1;
0084 0E01      00788         MOVLW   0x01
0086 6E00      00789         MOVWF   r0x00
0088      00790 _00155_DS_:
               00791 ;       .line   147; ../src/serial.c    fifo_unlock(&gfifo);
0088 0E00      00792         MOVLW   HIGH(_gfifo)
008A 6E00      00793         MOVWF   r0x03
008C 0E00      00794         MOVLW   LOW(_gfifo)
008E 6E00      00795         MOVWF   r0x02
0090 0E80      00796         MOVLW   0x80
0092 6E00      00797         MOVWF   r0x04
0094 5000      00798         MOVF    r0x04, W
0096 6EE5      00799         MOVWF   POSTDEC1
0098 5000      00800         MOVF    r0x03, W
009A 6EE5      00801         MOVWF   POSTDEC1
009C 5000      00802         MOVF    r0x02, W
009E 6EE5      00803         MOVWF   POSTDEC1
00A0 EC00 F000 00804         CALL    _fifo_unlock
00A4 0E03      00805         MOVLW   0x03
00A6 26E1      00806         ADDWF   FSR1L, F
00A8 D000      00807         BRA     _00156_DS_
00AA      00808 _00158_DS_:
               00809 ;       .line   150; ../src/serial.c    return c;
00AA 5000      00810         MOVF    r0x01, W
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AC CFE4 F000 00811         MOVFF   PREINC1, r0x04
00B0 CFE4 F000 00812         MOVFF   PREINC1, r0x03
00B4 CFE4 F000 00813         MOVFF   PREINC1, r0x02
00B8 CFE4 F000 00814         MOVFF   PREINC1, r0x01
00BC CFE4 F000 00815         MOVFF   PREINC1, r0x00
00C0 CFE4 FFD9 00816         MOVFF   PREINC1, FSR2L
00C4 0012      00817         RETURN  
               00818 
               00819 ; ; Starting pCode block
               00820 S_serial__int_wait      code
0000      00821 _int_wait:
               00822 ;       .line   117; ../src/serial.c    static void int_wait(void)
0000 CFD9 FFE5 00823         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00824         MOVFF   FSR1L, FSR2L
               00825 ;       .line   119; ../src/serial.c    INTCONbits.PEIE = 1;
0008 8C00      00826         BSF     _INTCONbits, 6
               00827 ;       .line   120; ../src/serial.c    INTCONbits.GIE = 1;
000A 8E00      00828         BSF     _INTCONbits, 7
000C 0003      00829         SLEEP 
000E CFE4 FFD9 00830         MOVFF   PREINC1, FSR2L
0012 0012      00831         RETURN  
               00832 
               00833 ; ; Starting pCode block
               00834 S_serial__peek_byte     code
0000      00835 _peek_byte:
               00836 ;       .line   102; ../src/serial.c    static unsigned char peek_byte(void)
0000 CFD9 FFE5 00837         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00838         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00839         MOVFF   r0x00, POSTDEC1
000C      00840 _00138_DS_:
               00841 ;       .line   106; ../src/serial.c    while (!PIR1bits.RCIF)
000C AA00      00842         BTFSS   _PIR1bits, 5
000E D000      00843         BRA     _00138_DS_
               00844 ;       .line   109; ../src/serial.c    c = RCREG;
0010 C000 F000 00845         MOVFF   _RCREG, r0x00
               00846 ;       .line   111; ../src/serial.c    PIR1bits.RCIF = 0;
0014 9A00      00847         BCF     _PIR1bits, 5
               00848 ;       .line   113; ../src/serial.c    return c;
0016 5000      00849         MOVF    r0x00, W
0018 CFE4 F000 00850         MOVFF   PREINC1, r0x00
001C CFE4 FFD9 00851         MOVFF   PREINC1, FSR2L
0020 0012      00852         RETURN  
               00853 
               00854 ; ; Starting pCode block
               00855 S_serial__write_byte    code
0000      00856 _write_byte:
               00857 ;       .line   81; ../src/serial.c     static void write_byte(unsigned char c)
0000 CFD9 FFE5 00858         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00859         MOVFF   FSR1L, FSR2L
0008 0E02      00860         MOVLW   0x02
000A CFDB F000 00861         MOVFF   PLUSW2, _TXREG
000E 0000      00862         NOP 
0010 0000      00863         NOP 
0012 0000      00864         NOP 
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0014      00865 _00130_DS_:
               00866 ;       .line   95; ../src/serial.c     while (!PIR1bits.TXIF)
0014 A800      00867         BTFSS   _PIR1bits, 4
0016 D000      00868         BRA     _00130_DS_
0018 CFE4 FFD9 00869         MOVFF   PREINC1, FSR2L
001C 0012      00870         RETURN  
               00871 
               00872 ; ; Starting pCode block
               00873 S_serial__fifo_unlock   code
0000      00874 _fifo_unlock:
               00875 ;       .line   64; ../src/serial.c     static void fifo_unlock(struct fifo* f)
0000 CFD9 FFE5 00876         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00877         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00878         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00879         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00880         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00881         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00882         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00883         MOVFF   r0x05, POSTDEC1
0020 0E02      00884         MOVLW   0x02
0022 CFDB F000 00885         MOVFF   PLUSW2, r0x00
0026 0E03      00886         MOVLW   0x03
0028 CFDB F000 00887         MOVFF   PLUSW2, r0x01
002C 0E04      00888         MOVLW   0x04
002E CFDB F000 00889         MOVFF   PLUSW2, r0x02
               00890 ;       .line   66; ../src/serial.c     INTCONbits.PEIE = f->peie;
0032 C000 F000 00891         MOVFF   r0x00, r0x03
0036 C000 F000 00892         MOVFF   r0x01, r0x04
003A C000 F000 00893         MOVFF   r0x02, r0x05
003E C000 FFE9 00894         MOVFF   r0x03, FSR0L
0042 C000 FFF3 00895         MOVFF   r0x04, PRODL
0046 5000      00896         MOVF    r0x05, W
0048 EC00 F000 00897         CALL    __gptrget1
004C 38E8      00898         SWAPF   WREG, W
004E 40E8      00899         RRNCF   WREG, W
0050 0B01      00900         ANDLW   0x01
0052 6E00      00901         MOVWF   r0x03
0054 5000      00902         MOVF    r0x03, W
0056 0B01      00903         ANDLW   0x01
0058 40E8      00904         RRNCF   WREG, W
005A 40E8      00905         RRNCF   WREG, W
005C 6EF4      00906         MOVWF   PRODH
005E 5000      00907         MOVF    _INTCONbits, W
0060 0BBF      00908         ANDLW   0xbf
0062 10F4      00909         IORWF   PRODH, W
0064 6E00      00910         MOVWF   _INTCONbits
               00911 ;       .line   67; ../src/serial.c     INTCONbits.GIE = f->gie;
0066 C000 FFE9 00912         MOVFF   r0x00, FSR0L
006A C000 FFF3 00913         MOVFF   r0x01, PRODL
006E 5000      00914         MOVF    r0x02, W
0070 EC00 F000 00915         CALL    __gptrget1
0074 38E8      00916         SWAPF   WREG, W
0076 0B01      00917         ANDLW   0x01
0078 6E00      00918         MOVWF   r0x00
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
007A 5000      00919         MOVF    r0x00, W
007C 0B01      00920         ANDLW   0x01
007E 40E8      00921         RRNCF   WREG, W
0080 6EF4      00922         MOVWF   PRODH
0082 5000      00923         MOVF    _INTCONbits, W
0084 0B7F      00924         ANDLW   0x7f
0086 10F4      00925         IORWF   PRODH, W
0088 6E00      00926         MOVWF   _INTCONbits
008A CFE4 F000 00927         MOVFF   PREINC1, r0x05
008E CFE4 F000 00928         MOVFF   PREINC1, r0x04
0092 CFE4 F000 00929         MOVFF   PREINC1, r0x03
0096 CFE4 F000 00930         MOVFF   PREINC1, r0x02
009A CFE4 F000 00931         MOVFF   PREINC1, r0x01
009E CFE4 F000 00932         MOVFF   PREINC1, r0x00
00A2 CFE4 FFD9 00933         MOVFF   PREINC1, FSR2L
00A6 0012      00934         RETURN  
               00935 
               00936 ; ; Starting pCode block
               00937 S_serial__fifo_lock     code
0000      00938 _fifo_lock:
               00939 ;       .line   54; ../src/serial.c     static void fifo_lock(struct fifo* f)
0000 CFD9 FFE5 00940         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00941         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00942         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00943         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00944         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00945         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00946         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00947         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00948         MOVFF   r0x06, POSTDEC1
0024 0E02      00949         MOVLW   0x02
0026 CFDB F000 00950         MOVFF   PLUSW2, r0x00
002A 0E03      00951         MOVLW   0x03
002C CFDB F000 00952         MOVFF   PLUSW2, r0x01
0030 0E04      00953         MOVLW   0x04
0032 CFDB F000 00954         MOVFF   PLUSW2, r0x02
               00955 ;       .line   56; ../src/serial.c     f->gie = INTCONbits.GIE;
0036 C000 F000 00956         MOVFF   r0x00, r0x03
003A C000 F000 00957         MOVFF   r0x01, r0x04
003E C000 F000 00958         MOVFF   r0x02, r0x05
0042 6A00      00959         CLRF    r0x06
0044 BE00      00960         BTFSC   _INTCONbits, 7
0046 2A00      00961         INCF    r0x06, F
0048 5000      00962         MOVF    r0x06, W
004A 0B01      00963         ANDLW   0x01
004C 38E8      00964         SWAPF   WREG, W
004E 6EF4      00965         MOVWF   PRODH
0050 C000 FFE9 00966         MOVFF   r0x03, FSR0L
0054 C000 FFF3 00967         MOVFF   r0x04, PRODL
0058 5000      00968         MOVF    r0x05, W
005A EC00 F000 00969         CALL    __gptrget1
005E 0BEF      00970         ANDLW   0xef
0060 10F4      00971         IORWF   PRODH, W
0062 6EE5      00972         MOVWF   POSTDEC1
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0064 C000 FFE9 00973         MOVFF   r0x03, FSR0L
0068 C000 FFF3 00974         MOVFF   r0x04, PRODL
006C 5000      00975         MOVF    r0x05, W
006E EC00 F000 00976         CALL    __gptrput1
               00977 ;       .line   57; ../src/serial.c     f->peie = INTCONbits.PEIE;
0072 6A00      00978         CLRF    r0x03
0074 BC00      00979         BTFSC   _INTCONbits, 6
0076 2A00      00980         INCF    r0x03, F
0078 5000      00981         MOVF    r0x03, W
007A 0B01      00982         ANDLW   0x01
007C 38E8      00983         SWAPF   WREG, W
007E 44E8      00984         RLNCF   WREG, W
0080 6EF4      00985         MOVWF   PRODH
0082 C000 FFE9 00986         MOVFF   r0x00, FSR0L
0086 C000 FFF3 00987         MOVFF   r0x01, PRODL
008A 5000      00988         MOVF    r0x02, W
008C EC00 F000 00989         CALL    __gptrget1
0090 0BDF      00990         ANDLW   0xdf
0092 10F4      00991         IORWF   PRODH, W
0094 6EE5      00992         MOVWF   POSTDEC1
0096 C000 FFE9 00993         MOVFF   r0x00, FSR0L
009A C000 FFF3 00994         MOVFF   r0x01, PRODL
009E 5000      00995         MOVF    r0x02, W
00A0 EC00 F000 00996         CALL    __gptrput1
               00997 ;       .line   59; ../src/serial.c     INTCONbits.GIE = 0;
00A4 9E00      00998         BCF     _INTCONbits, 7
               00999 ;       .line   60; ../src/serial.c     INTCONbits.PEIE = 0;
00A6 9C00      01000         BCF     _INTCONbits, 6
00A8 CFE4 F000 01001         MOVFF   PREINC1, r0x06
00AC CFE4 F000 01002         MOVFF   PREINC1, r0x05
00B0 CFE4 F000 01003         MOVFF   PREINC1, r0x04
00B4 CFE4 F000 01004         MOVFF   PREINC1, r0x03
00B8 CFE4 F000 01005         MOVFF   PREINC1, r0x02
00BC CFE4 F000 01006         MOVFF   PREINC1, r0x01
00C0 CFE4 F000 01007         MOVFF   PREINC1, r0x00
00C4 CFE4 FFD9 01008         MOVFF   PREINC1, FSR2L
00C8 0012      01009         RETURN  
               01010 
               01011 ; ; Starting pCode block
               01012 S_serial__fifo_push     code
0000      01013 _fifo_push:
               01014 ;       .line   48; ../src/serial.c     static void fifo_push(struct fifo* f, unsigned char c)
0000 CFD9 FFE5 01015         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01016         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01017         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01018         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01019         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01020         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01021         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01022         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01023         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01024         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01025         MOVFF   r0x08, POSTDEC1
002C 0E02      01026         MOVLW   0x02
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
002E CFDB F000 01027         MOVFF   PLUSW2, r0x00
0032 0E03      01028         MOVLW   0x03
0034 CFDB F000 01029         MOVFF   PLUSW2, r0x01
0038 0E04      01030         MOVLW   0x04
003A CFDB F000 01031         MOVFF   PLUSW2, r0x02
003E 0E05      01032         MOVLW   0x05
0040 CFDB F000 01033         MOVFF   PLUSW2, r0x03
               01034 ;       .line   50; ../src/serial.c     f->buffer[f->size++] = c;
0044 5000      01035         MOVF    r0x00, W
0046 0F01      01036         ADDLW   0x01
0048 6E00      01037         MOVWF   r0x04
004A 0E00      01038         MOVLW   0x00
004C 2000      01039         ADDWFC  r0x01, W
004E 6E00      01040         MOVWF   r0x05
0050 0E00      01041         MOVLW   0x00
0052 2000      01042         ADDWFC  r0x02, W
0054 6E00      01043         MOVWF   r0x06
0056 C000 FFE9 01044         MOVFF   r0x00, FSR0L
005A C000 FFF3 01045         MOVFF   r0x01, PRODL
005E 5000      01046         MOVF    r0x02, W
0060 EC00 F000 01047         CALL    __gptrget1
0064 0B0F      01048         ANDLW   0x0f
0066 6E00      01049         MOVWF   r0x07
0068 2800      01050         INCF    r0x07, W
006A 6E00      01051         MOVWF   r0x08
006C 5000      01052         MOVF    r0x08, W
006E 0B0F      01053         ANDLW   0x0f
0070 6EF4      01054         MOVWF   PRODH
0072 C000 FFE9 01055         MOVFF   r0x00, FSR0L
0076 C000 FFF3 01056         MOVFF   r0x01, PRODL
007A 5000      01057         MOVF    r0x02, W
007C EC00 F000 01058         CALL    __gptrget1
0080 0BF0      01059         ANDLW   0xf0
0082 10F4      01060         IORWF   PRODH, W
0084 6EE5      01061         MOVWF   POSTDEC1
0086 C000 FFE9 01062         MOVFF   r0x00, FSR0L
008A C000 FFF3 01063         MOVFF   r0x01, PRODL
008E 5000      01064         MOVF    r0x02, W
0090 EC00 F000 01065         CALL    __gptrput1
0094 5000      01066         MOVF    r0x07, W
0096 2600      01067         ADDWF   r0x04, F
0098 6AE8      01068         CLRF    WREG
009A 2200      01069         ADDWFC  r0x05, F
009C 6AE8      01070         CLRF    WREG
009E 2200      01071         ADDWFC  r0x06, F
00A0 C000 FFE5 01072         MOVFF   r0x03, POSTDEC1
00A4 C000 FFE9 01073         MOVFF   r0x04, FSR0L
00A8 C000 FFF3 01074         MOVFF   r0x05, PRODL
00AC 5000      01075         MOVF    r0x06, W
00AE EC00 F000 01076         CALL    __gptrput1
00B2 CFE4 F000 01077         MOVFF   PREINC1, r0x08
00B6 CFE4 F000 01078         MOVFF   PREINC1, r0x07
00BA CFE4 F000 01079         MOVFF   PREINC1, r0x06
00BE CFE4 F000 01080         MOVFF   PREINC1, r0x05
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C2 CFE4 F000 01081         MOVFF   PREINC1, r0x04
00C6 CFE4 F000 01082         MOVFF   PREINC1, r0x03
00CA CFE4 F000 01083         MOVFF   PREINC1, r0x02
00CE CFE4 F000 01084         MOVFF   PREINC1, r0x01
00D2 CFE4 F000 01085         MOVFF   PREINC1, r0x00
00D6 CFE4 FFD9 01086         MOVFF   PREINC1, FSR2L
00DA 0012      01087         RETURN  
               01088 
               01089 ; ; Starting pCode block
               01090 S_serial__fifo_pop      code
0000      01091 _fifo_pop:
               01092 ;       .line   42; ../src/serial.c     static unsigned char fifo_pop(struct fifo* f)
0000 CFD9 FFE5 01093         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01094         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01095         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01096         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01097         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01098         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01099         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01100         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01101         MOVFF   r0x06, POSTDEC1
0024 0E02      01102         MOVLW   0x02
0026 CFDB F000 01103         MOVFF   PLUSW2, r0x00
002A 0E03      01104         MOVLW   0x03
002C CFDB F000 01105         MOVFF   PLUSW2, r0x01
0030 0E04      01106         MOVLW   0x04
0032 CFDB F000 01107         MOVFF   PLUSW2, r0x02
               01108 ;       .line   44; ../src/serial.c     return f->buffer[--f->size];
0036 5000      01109         MOVF    r0x00, W
0038 0F01      01110         ADDLW   0x01
003A 6E00      01111         MOVWF   r0x03
003C 0E00      01112         MOVLW   0x00
003E 2000      01113         ADDWFC  r0x01, W
0040 6E00      01114         MOVWF   r0x04
0042 0E00      01115         MOVLW   0x00
0044 2000      01116         ADDWFC  r0x02, W
0046 6E00      01117         MOVWF   r0x05
0048 C000 FFE9 01118         MOVFF   r0x00, FSR0L
004C C000 FFF3 01119         MOVFF   r0x01, PRODL
0050 5000      01120         MOVF    r0x02, W
0052 EC00 F000 01121         CALL    __gptrget1
0056 0B0F      01122         ANDLW   0x0f
0058 6E00      01123         MOVWF   r0x06
005A 0600      01124         DECF    r0x06, F
005C 5000      01125         MOVF    r0x06, W
005E 0B0F      01126         ANDLW   0x0f
0060 6EF4      01127         MOVWF   PRODH
0062 C000 FFE9 01128         MOVFF   r0x00, FSR0L
0066 C000 FFF3 01129         MOVFF   r0x01, PRODL
006A 5000      01130         MOVF    r0x02, W
006C EC00 F000 01131         CALL    __gptrget1
0070 0BF0      01132         ANDLW   0xf0
0072 10F4      01133         IORWF   PRODH, W
0074 6EE5      01134         MOVWF   POSTDEC1
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0076 C000 FFE9 01135         MOVFF   r0x00, FSR0L
007A C000 FFF3 01136         MOVFF   r0x01, PRODL
007E 5000      01137         MOVF    r0x02, W
0080 EC00 F000 01138         CALL    __gptrput1
0084 C000 FFE9 01139         MOVFF   r0x00, FSR0L
0088 C000 FFF3 01140         MOVFF   r0x01, PRODL
008C 5000      01141         MOVF    r0x02, W
008E EC00 F000 01142         CALL    __gptrget1
0092 0B0F      01143         ANDLW   0x0f
0094 6E00      01144         MOVWF   r0x00
0096 5000      01145         MOVF    r0x00, W
0098 2600      01146         ADDWF   r0x03, F
009A 6AE8      01147         CLRF    WREG
009C 2200      01148         ADDWFC  r0x04, F
009E 6AE8      01149         CLRF    WREG
00A0 2200      01150         ADDWFC  r0x05, F
00A2 C000 FFE9 01151         MOVFF   r0x03, FSR0L
00A6 C000 FFF3 01152         MOVFF   r0x04, PRODL
00AA 5000      01153         MOVF    r0x05, W
00AC EC00 F000 01154         CALL    __gptrget1
00B0 6E00      01155         MOVWF   r0x03
00B2 5000      01156         MOVF    r0x03, W
00B4 CFE4 F000 01157         MOVFF   PREINC1, r0x06
00B8 CFE4 F000 01158         MOVFF   PREINC1, r0x05
00BC CFE4 F000 01159         MOVFF   PREINC1, r0x04
00C0 CFE4 F000 01160         MOVFF   PREINC1, r0x03
00C4 CFE4 F000 01161         MOVFF   PREINC1, r0x02
00C8 CFE4 F000 01162         MOVFF   PREINC1, r0x01
00CC CFE4 F000 01163         MOVFF   PREINC1, r0x00
00D0 CFE4 FFD9 01164         MOVFF   PREINC1, FSR2L
00D4 0012      01165         RETURN  
               01166 
               01167 ; ; Starting pCode block
               01168 S_serial__fifo_init     code
0000      01169 _fifo_init:
               01170 ;       .line   34; ../src/serial.c     static void fifo_init(struct fifo* f)
0000 CFD9 FFE5 01171         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01172         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01173         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01174         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01175         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01176         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01177         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01178         MOVFF   r0x05, POSTDEC1
0020 0E02      01179         MOVLW   0x02
0022 CFDB F000 01180         MOVFF   PLUSW2, r0x00
0026 0E03      01181         MOVLW   0x03
0028 CFDB F000 01182         MOVFF   PLUSW2, r0x01
002C 0E04      01183         MOVLW   0x04
002E CFDB F000 01184         MOVFF   PLUSW2, r0x02
               01185 ;       .line   36; ../src/serial.c     f->size = 0;
0032 C000 F000 01186         MOVFF   r0x00, r0x03
0036 C000 F000 01187         MOVFF   r0x01, r0x04
003A C000 F000 01188         MOVFF   r0x02, r0x05
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
003E C000 FFE9 01189         MOVFF   r0x03, FSR0L
0042 C000 FFF3 01190         MOVFF   r0x04, PRODL
0046 5000      01191         MOVF    r0x05, W
0048 EC00 F000 01192         CALL    __gptrget1
004C 0BF0      01193         ANDLW   0xf0
004E 6EE5      01194         MOVWF   POSTDEC1
0050 C000 FFE9 01195         MOVFF   r0x03, FSR0L
0054 C000 FFF3 01196         MOVFF   r0x04, PRODL
0058 5000      01197         MOVF    r0x05, W
005A EC00 F000 01198         CALL    __gptrput1
               01199 ;       .line   37; ../src/serial.c     f->error = 0;
005E C000 F000 01200         MOVFF   r0x00, r0x03
0062 C000 F000 01201         MOVFF   r0x01, r0x04
0066 C000 F000 01202         MOVFF   r0x02, r0x05
006A C000 FFE9 01203         MOVFF   r0x03, FSR0L
006E C000 FFF3 01204         MOVFF   r0x04, PRODL
0072 5000      01205         MOVF    r0x05, W
0074 EC00 F000 01206         CALL    __gptrget1
0078 9CE8      01207         BCF     WREG, 6
007A 6EE5      01208         MOVWF   POSTDEC1
007C C000 FFE9 01209         MOVFF   r0x03, FSR0L
0080 C000 FFF3 01210         MOVFF   r0x04, PRODL
0084 5000      01211         MOVF    r0x05, W
0086 EC00 F000 01212         CALL    __gptrput1
               01213 ;       .line   38; ../src/serial.c     f->overflow = 0;
008A C000 FFE9 01214         MOVFF   r0x00, FSR0L
008E C000 FFF3 01215         MOVFF   r0x01, PRODL
0092 5000      01216         MOVF    r0x02, W
0094 EC00 F000 01217         CALL    __gptrget1
0098 9EE8      01218         BCF     WREG, 7
009A 6EE5      01219         MOVWF   POSTDEC1
009C C000 FFE9 01220         MOVFF   r0x00, FSR0L
00A0 C000 FFF3 01221         MOVFF   r0x01, PRODL
00A4 5000      01222         MOVF    r0x02, W
00A6 EC00 F000 01223         CALL    __gptrput1
00AA CFE4 F000 01224         MOVFF   PREINC1, r0x05
00AE CFE4 F000 01225         MOVFF   PREINC1, r0x04
00B2 CFE4 F000 01226         MOVFF   PREINC1, r0x03
00B6 CFE4 F000 01227         MOVFF   PREINC1, r0x02
00BA CFE4 F000 01228         MOVFF   PREINC1, r0x01
00BE CFE4 F000 01229         MOVFF   PREINC1, r0x00
00C2 CFE4 FFD9 01230         MOVFF   PREINC1, FSR2L
00C6 0012      01231         RETURN  
               01232 
               01233 
               01234 
               01235 ; Statistics:
               01236 ; code size:     2204 (0x089c) bytes ( 1.68%)
               01237 ;                1102 (0x044e) words
               01238 ; udata size:       9 (0x0009) bytes ( 0.50%)
               01239 ; access size:     10 (0x000a) bytes
               01240 
               01241 
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00130_DS_                        00000014
_00138_DS_                        0000000C
_00154_DS_                        0000007E
_00155_DS_                        00000088
_00156_DS_                        00000020
_00158_DS_                        000000AA
_00170_DS_                        00000012
_00183_DS_                        000000A4
_00189_DS_                        00000052
_00193_DS_                        00000092
_00198_DS_                        0000005C
_00214_DS_                        0000001A
_00216_DS_                        0000006A
_00219_DS_                        00000034
_00222_DS_                        00000026
_00223_DS_                        0000006E
_00224_DS_                        00000070
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCONbits                      00000000
_BSR                              00000000
_BSRbits                          00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_EEADR                            00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EEDATA                           00000000
_FSR0H                            00000000
_FSR0Hbits                        00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1Hbits                        00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2Hbits                        00000000
_FSR2L                            00000000
_HLVDCON                          00000000
_HLVDCONbits                      00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATHbits                       00000000
_PCLATU                           00000000
_PCLATUbits                       00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PRODH                            00000000
_PRODL                            00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCSTA                            00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRGH                           00000000
_SPPCFG                           00000000
_SPPCFGbits                       00000000
_SPPCON                           00000000
_SPPCONbits                       00000000
_SPPDATA                          00000000
_SPPDATAbits                      00000000
_SPPEPS                           00000000
_SPPEPSbits                       00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_TABLAT                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TBLPTRUbits                      00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TOSUbits                         00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TXREG                            00000000
_TXSTA                            00000000
_TXSTAbits                        00000000
_UADDR                            00000000
_UADDRbits                        00000000
_UCFG                             00000000
_UCFGbits                         00000000
_UCON                             00000000
_UCONbits                         00000000
_UEIE                             00000000
_UEIEbits                         00000000
_UEIR                             00000000
_UEIRbits                         00000000
_UEP0                             00000000
_UEP0bits                         00000000
_UEP1                             00000000
_UEP10                            00000000
_UEP10bits                        00000000
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_UEP11                            00000000
_UEP11bits                        00000000
_UEP12                            00000000
_UEP12bits                        00000000
_UEP13                            00000000
_UEP13bits                        00000000
_UEP14                            00000000
_UEP14bits                        00000000
_UEP15                            00000000
_UEP15bits                        00000000
_UEP1bits                         00000000
_UEP2                             00000000
_UEP2bits                         00000000
_UEP3                             00000000
_UEP3bits                         00000000
_UEP4                             00000000
_UEP4bits                         00000000
_UEP5                             00000000
_UEP5bits                         00000000
_UEP6                             00000000
_UEP6bits                         00000000
_UEP7                             00000000
_UEP7bits                         00000000
_UEP8                             00000000
_UEP8bits                         00000000
_UEP9                             00000000
_UEP9bits                         00000000
_UFRMH                            00000000
_UFRMHbits                        00000000
_UFRML                            00000000
_UFRMLbits                        00000000
_UIE                              00000000
_UIEbits                          00000000
_UIR                              00000000
_UIRbits                          00000000
_USTAT                            00000000
_USTATbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F4550                         00000001
__gptrget1                        00000000
__gptrput1                        00000000
_fifo_init                        00000000
_fifo_lock                        00000000
_fifo_pop                         00000000
_fifo_push                        00000000
_fifo_unlock                      00000000
_gfifo                            00000000
_int_wait                         00000000
_osc_set_power                    00000000
_peek_byte                        00000000
_read_byte                        00000000
_serial_handle_interrupt          00000000
gpasm-0.13.6 beta               ../src/serial.asm11-21-2009  16:31:00         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_serial_pop_fifo                  00000000
_serial_read                      00000000
_serial_setup                     00000000
_serial_sleep                     00000000
_serial_write                     00000000
_serial_writeb                    00000000
_serial_writei                    00000000
_write_byte                       00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

